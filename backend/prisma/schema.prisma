datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String?
  email     String   @unique
  password  String
  avatar    String?
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  devices   Device[]
  tokens    Token[]

  @@map("users")
}

model Device {
  id             Int            @id @default(autoincrement())
  name           String
  number         String
  type           DeviceType     @relation(fields: [typeId], references: [id])
  typeId         Int
  category       DeviceCategory @relation(fields: [categoryId], references: [id])
  categoryId     String
  description    String?
  createdAt      DateTime       @default(now()) @map("created_at")
  updatedAt      DateTime       @updatedAt @map("updated_at")
  from           DateTime
  to             DateTime
  user           User           @relation(fields: [userId], references: [id])
  userId         Int            @map("user_id")
  organization   Organization   @relation(fields: [organizationId], references: [id])
  organizationId Int            @map("organization_id")

  @@map("devices")
}

model DeviceCategory {
  id   String @id @unique
  name String @unique

  devices          Device[]
  devicesWithTypes DeviceType[]

  @@map("devices_category")
}

model DeviceType {
  id         Int            @id @default(autoincrement())
  name       String         @unique
  category   DeviceCategory @relation(fields: [categoryId], references: [id])
  categoryId String

  devices Device[]

  @@map("devices_type")
}

model Organization {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  contacts OrganizationContact[]
  devices  Device[]

  @@map("organizations")
}

model OrganizationContact {
  id             Int          @id @default(autoincrement())
  name           String
  position       String
  phoneNumber    String       @map("phone_number")
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId Int

  @@map("organization_contacts")
}

model Token {
  id     String @id @default(uuid())
  token  String @unique
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @map("user_id")

  @@map("tokens")
}

model Role {
  id   String @id @unique
  name String @unique

  users User[]

  @@map("roles")
}
